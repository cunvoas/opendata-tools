
upstream autmel_isochrone {
    server autmel_isochrone:8980;
    keepalive 20;
}


# PROD
server {
    # | A besoin des ssl_certificate pour fonctionner |
    listen 443 ssl;
    # | A besoin des ssl_certificate pour fonctionner |
    #listen [::]:443 ssl;
    
    http2  on;
    ssl_prefer_server_ciphers on;

    # https://wiki.mozilla.org/Security/Server_Side_TLS
#    ssl_protocols   TLSv1.3;
#    ssl_ciphers     TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
   
    ssl_protocols   TLSv1.3 TLSv1.2;
    ssl_ciphers     ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    
    access_log /var/log/nginx/isochrone.access.log;
    error_log /var/log/nginx/isochrone.error.log;


# drop main DNS name (no response)
    if ($host  ~* (proxad.net)) { return 444; }
# block bots user-agent
    if ($http_user_agent ~* (^$)) { return 444; }
    if ($http_user_agent = "-") { return 444; }
    if ($http_user_agent ~* (netcrawl|npbot|zgrab|masscan|censys|python-requests|gdnplus.com|Mozlila)) { return 444; }
   
   
   
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
        
    
    server_name autmel-map.duckdns.org autmel-map.hd.free.fr;
    
    
# | J'ai pas les fichiers en local du coup Ã§a fait crash la nginx |
    ssl_certificate /etc/letsencrypt/live/autmel-map.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/autmel-map.duckdns.org/privkey.pem;

    underscores_in_headers on;
    ignore_invalid_headers on;

	index index.html;

	location ~ /.well-known/acme-challenge {
        allow all;
        root /tmp/acme_challenge;
    }
	     
    # static redirection
    location /carte {
	    return 302 https://autmel.github.io/geoservice/;
    }
    
    # admin APIs
    location /isochrone {
        
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
#        proxy_set_header Host $http_host;
        proxy_set_header Host $host;
                
        proxy_pass http://autmel_isochrone/isochrone;
        proxy_redirect http://autmel-map.duckdns.org https://autmel-map.duckdns.org;
        #proxy_redirect default;
        
        # https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/
        #proxy_http_version 1.1;

#        proxy_pass_request_headers  on;

        # | J'en ai pas besoin pour le moment |
        # add_header x-access-token $http_x_acces_token;
        # auth_request_set $token $upstream_http_x_access_token;
	    # proxy_set_header x-access-token $token;
	    # auth_request_set $user $upsteam_http_user_id;
	    # proxy_set_header user_id $user;
	    
	    # increase proxy buffer to handle some OpenERP web requests
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
        
#        proxy_read_timeout 7200s;
#        proxy_connect_timeout 7200s;
#        proxy_send_timeout 7200s;
#        send_timeout 7200s;
        
        
#        proxy_intercept_errors on;
#        error_page 301 302 307 = @handle_redirect;
    }
    

#    location @handle_redirect {
#        set $saved_redirect_location '$upstream_http_location';
#        proxy_pass $saved_redirect_location;
#    }

}